// subject.h
// Generated by decompiling subject.exe
// using Reko decompiler version VERSION

/*
// Equivalence classes ////////////
Eq_1: (struct "Globals")
	globals_t (in globals : (ptr (struct "Globals")))
Eq_2: (union "Eq_2" (ptr32 u0) (DWORD u1))
	T_2 (in eax : Eq_2)
	T_3 (in eax_16 : Eq_2)
	T_6 (in GetLogicalDrives() : DWORD)
	T_14 (in DPB(fp, 0x00, 0) : ptr32)
Eq_4: (fn Eq_2 ())
	T_4 (in GetLogicalDrives : ptr32)
	T_5 (in signature of GetLogicalDrives : void)
// Type Variables ////////////
globals_t: (in globals : (ptr (struct "Globals")))
  Class: Eq_1
  DataType: (ptr Eq_1)
  OrigDataType: (ptr (struct "Globals"))
T_2: (in eax : Eq_2)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: DWORD
T_3: (in eax_16 : Eq_2)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: ptr32
T_4: (in GetLogicalDrives : ptr32)
  Class: Eq_4
  DataType: (ptr Eq_4)
  OrigDataType: (ptr (fn T_6 ()))
T_5: (in signature of GetLogicalDrives : void)
  Class: Eq_4
  DataType: (ptr Eq_4)
  OrigDataType: 
T_6: (in GetLogicalDrives() : DWORD)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: DWORD
T_7: (in (byte) eax_16 : byte)
  Class: Eq_7
  DataType: byte
  OrigDataType: byte
T_8: (in 0x04 : byte)
  Class: Eq_8
  DataType: byte
  OrigDataType: byte
T_9: (in (byte) eax_16 & 0x04 : byte)
  Class: Eq_9
  DataType: byte
  OrigDataType: byte
T_10: (in 0x00 : byte)
  Class: Eq_9
  DataType: byte
  OrigDataType: byte
T_11: (in ((byte) eax_16 & 0x04) == 0x00 : bool)
  Class: Eq_11
  DataType: bool
  OrigDataType: bool
T_12: (in fp : ptr32)
  Class: Eq_12
  DataType: ptr32
  OrigDataType: ptr32
T_13: (in 0x00 : byte)
  Class: Eq_13
  DataType: byte
  OrigDataType: byte
T_14: (in DPB(fp, 0x00, 0) : ptr32)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: ptr32
*/
typedef struct Globals {
} Eq_1;

typedef union Eq_2 {
	ptr32 u0;
	DWORD u1;
} Eq_2;

typedef Eq_2 (Eq_4)();

