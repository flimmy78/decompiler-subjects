Using options:
0040C723: warning: Multiple different values of stack delta in procedure Win32CrtStartup when processing RET instruction; was 4 previously.
0040C321: warning: Procedure Win32CrtStartup previously had a return address of 6 bytes on the stack, but now seems to have a return address of 4 bytes on the stack.
0040BFE6: warning: Procedure Win32CrtStartup previously had a return address of 6 bytes on the stack, but now seems to have a return address of 4 bytes on the stack.
0040C399: warning: Procedure Win32CrtStartup previously had a return address of 6 bytes on the stack, but now seems to have a return address of 4 bytes on the stack.
0040C401: error: INT service 002E is not supported by Windows.
0040C76B: warning: Procedure Win32CrtStartup previously had a return address of 6 bytes on the stack, but now seems to have a return address of 4 bytes on the stack.
Win32CrtStartup: error: An error occurred during data flow analysis.
    Offset must be non-negative.
Parameter name: bitOffset
      at Reko.Core.Expressions.Slice..ctor (Reko.Core.Types.DataType dt, Reko.Core.Expressions.Expression i, Int32 bitOffset) <0x41ca5750 + 0x0019b> in <filename unknown>:0 
  at Reko.Analysis.Aliases.CreateAliasInstruction (Reko.Core.Expressions.Identifier varFrom, Reko.Core.Expressions.Identifier varTo) <0x41ca50a0 + 0x0038f> in <filename unknown>:0 
  at Reko.Analysis.Aliases.Def (Reko.Core.Expressions.Identifier idar) <0x41ca4f30 + 0x000db> in <filename unknown>:0 
  at Reko.Analysis.Aliases.VisitAssignment (Reko.Core.Code.Assignment ass) <0x41ca4ed0 + 0x00023> in <filename unknown>:0 
  at Reko.Core.Code.Assignment.Accept (InstructionVisitor v) <0x41c7c7a0 + 0x00027> in <filename unknown>:0 
  at Reko.Analysis.Aliases.Transform () <0x41ca4500 + 0x0010c> in <filename unknown>:0 
  at Reko.Analysis.DataFlowAnalysis.BuildSsaTransform (Reko.Core.Procedure proc) <0x41c9fa80 + 0x000ef> in <filename unknown>:0 
  at Reko.Analysis.DataFlowAnalysis.BuildExpressionTrees () <0x41c9ece0 + 0x00203> in <filename unknown>:0 
0040C6F7: error: An error occurred while processing the statement esi = esi - ecx.
    Pulling difference ui32 and (ptr (struct (0 T_150 t0000)))
      at Reko.Core.Expressions.ExpressionTypeAscenderBase.PullDiffDataType (Reko.Core.Types.DataType dtLeft, Reko.Core.Types.DataType dtRight) <0x41cb6da0 + 0x002f7> in <filename unknown>:0 
  at Reko.Core.Expressions.ExpressionTypeAscenderBase.VisitBinaryExpression (Reko.Core.Expressions.BinaryExpression binExp) <0x41cb39e0 + 0x000eb> in <filename unknown>:0 
  at Reko.Core.Expressions.BinaryExpression.Accept[T] (ExpressionVisitor`1 v) <0x41c57860 + 0x00030> in <filename unknown>:0 
  at Reko.Typing.TypeCollector.VisitAssignment (Reko.Core.Code.Assignment ass) <0x41cb3590 + 0x00031> in <filename unknown>:0 
  at Reko.Core.Code.Assignment.Accept (InstructionVisitor v) <0x41c7c7a0 + 0x00027> in <filename unknown>:0 
  at Reko.Typing.TypeCollector.CollectTypes () <0x41cb2410 + 0x00289> in <filename unknown>:0 
0040C2A5: error: An error occurred while processing the statement esp = esp - Mem0[esi + 0x00000003:word32] - C.
    Pulling difference ptr32 and (union (bool u0) (int32 u1) (uint32 u2) (ui8 u3))
      at Reko.Core.Expressions.ExpressionTypeAscenderBase.PullDiffDataType (Reko.Core.Types.DataType dtLeft, Reko.Core.Types.DataType dtRight) <0x41cb6da0 + 0x001ef> in <filename unknown>:0 
  at Reko.Core.Expressions.ExpressionTypeAscenderBase.VisitBinaryExpression (Reko.Core.Expressions.BinaryExpression binExp) <0x41cb39e0 + 0x000eb> in <filename unknown>:0 
  at Reko.Core.Expressions.BinaryExpression.Accept[T] (ExpressionVisitor`1 v) <0x41c57860 + 0x00030> in <filename unknown>:0 
  at Reko.Typing.TypeCollector.VisitAssignment (Reko.Core.Code.Assignment ass) <0x41cb3590 + 0x00031> in <filename unknown>:0 
  at Reko.Core.Code.Assignment.Accept (InstructionVisitor v) <0x41c7c7a0 + 0x00027> in <filename unknown>:0 
  at Reko.Typing.TypeCollector.CollectTypes () <0x41cb2410 + 0x00289> in <filename unknown>:0 
0040C13D: error: An error occurred while processing the statement branch Test(NE,Z) && ecx != 0x00000000 l0040C1B5.
    Not implemented: Test(NE,Z) && ecx != 0x00000000
      at Reko.Core.Expressions.ExpressionTypeAscenderBase.VisitBinaryExpression (Reko.Core.Expressions.BinaryExpression binExp) <0x41cb39e0 + 0x0047f> in <filename unknown>:0 
  at Reko.Core.Expressions.BinaryExpression.Accept[T] (ExpressionVisitor`1 v) <0x41c57860 + 0x00030> in <filename unknown>:0 
  at Reko.Typing.TypeCollector.VisitBranch (Reko.Core.Code.Branch branch) <0x41cb90c0 + 0x00031> in <filename unknown>:0 
  at Reko.Core.Code.Branch.Accept (InstructionVisitor v) <0x41c7e310 + 0x00027> in <filename unknown>:0 
  at Reko.Typing.TypeCollector.CollectTypes () <0x41cb2410 + 0x00289> in <filename unknown>:0 
