// subject.h
// Generated by decompiling subject.exe
// using Reko decompiler version VERSION

/*
// Equivalence classes ////////////
Eq_1: Eq_2
	globals_t (in globals : (ptr (struct "Globals")))
Eq_2: HMODULE
	T_2 (in eax_7 : Eq_2)
	T_7 (in GetModuleHandleA(0x00414FE3) : HMODULE)
	T_35 (in Mem51[esp_14 + 0x00000000:word32] : word32)
Eq_3: (fn Eq_2 (Eq_5))
	T_3 (in GetModuleHandleA : ptr32)
	T_4 (in signature of GetModuleHandleA : void)
Eq_5: LPCSTR
	T_5 (in lpModuleName : LPCSTR)
	T_6 (in 0x00414FE3 : word32)
// Type Variables ////////////
globals_t: (in globals : (ptr (struct "Globals")))
  Class: Eq_1
  DataType: (ptr (arr Eq_2))
  OrigDataType: (ptr (struct "Globals"))
T_2: (in eax_7 : Eq_2)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: (union (HMODULE u1))
T_3: (in GetModuleHandleA : ptr32)
  Class: Eq_3
  DataType: (ptr Eq_3)
  OrigDataType: (ptr (fn T_7 (T_6)))
T_4: (in signature of GetModuleHandleA : void)
  Class: Eq_3
  DataType: (ptr Eq_3)
  OrigDataType: 
T_5: (in lpModuleName : LPCSTR)
  Class: Eq_5
  DataType: Eq_5
  OrigDataType: 
T_6: (in 0x00414FE3 : word32)
  Class: Eq_5
  DataType: Eq_5
  OrigDataType: LPCSTR
T_7: (in GetModuleHandleA(0x00414FE3) : HMODULE)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: HMODULE
T_8: (in esp_14 : (ptr word32))
  Class: Eq_8
  DataType: (ptr word32)
  OrigDataType: (ptr (struct 0004 (0 word32 dw0000)))
T_9: (in fp : ptr32)
  Class: Eq_9
  DataType: ptr32
  OrigDataType: ptr32
T_10: (in 0x00000004 : word32)
  Class: Eq_10
  DataType: ui32
  OrigDataType: ui32
T_11: (in fp - 0x00000004 : word32)
  Class: Eq_8
  DataType: (ptr word32)
  OrigDataType: ptr32
T_12: (in true : bool)
  Class: Eq_12
  DataType: bool
  OrigDataType: bool
T_13: (in esp_15 : (ptr word32))
  Class: Eq_13
  DataType: (ptr word32)
  OrigDataType: (ptr (struct (0 T_16 t0000)))
T_14: (in 0x00000004 : word32)
  Class: Eq_14
  DataType: ui32
  OrigDataType: ui32
T_15: (in esp_14 - 0x00000004 : word32)
  Class: Eq_13
  DataType: (ptr word32)
  OrigDataType: ptr32
T_16: (in 0x83B13D53 : word32)
  Class: Eq_16
  DataType: word32
  OrigDataType: word32
T_17: (in 0x00000000 : word32)
  Class: Eq_17
  DataType: word32
  OrigDataType: word32
T_18: (in esp_15 + 0x00000000 : word32)
  Class: Eq_18
  DataType: ptr32
  OrigDataType: ptr32
T_19: (in Mem16[esp_15 + 0x00000000:word32] : word32)
  Class: Eq_16
  DataType: word32
  OrigDataType: word32
T_20: (in ebx_18 : word32)
  Class: Eq_20
  DataType: word32
  OrigDataType: word32
T_21: (in 0x000003F0 : word32)
  Class: Eq_20
  DataType: word32
  OrigDataType: word32
T_22: (in edx_20 : (ptr word32))
  Class: Eq_22
  DataType: (ptr word32)
  OrigDataType: (ptr (struct 0004 (0 word32 dw0000)))
T_23: (in 0x00000E30 : word32)
  Class: Eq_23
  DataType: ui32
  OrigDataType: ui32
T_24: (in esp_15 - 0x00000E30 : word32)
  Class: Eq_22
  DataType: (ptr word32)
  OrigDataType: ptr32
T_25: (in ecx_21 : word32)
  Class: Eq_25
  DataType: word32
  OrigDataType: word32
T_26: (in 0x00000000 : word32)
  Class: Eq_25
  DataType: word32
  OrigDataType: word32
T_27: (in 0x00000000 : word32)
  Class: Eq_8
  DataType: (ptr word32)
  OrigDataType: word32
T_28: (in esp_14 != 0x00000000 : bool)
  Class: Eq_28
  DataType: bool
  OrigDataType: bool
T_29: (in 0x00000000 : word32)
  Class: Eq_20
  DataType: word32
  OrigDataType: word32
T_30: (in ebx_18 != 0x00000000 : bool)
  Class: Eq_30
  DataType: bool
  OrigDataType: bool
T_31: (in 0x00000004 : word32)
  Class: Eq_31
  DataType: ui32
  OrigDataType: ui32
T_32: (in esp_14 - 0x00000004 : word32)
  Class: Eq_8
  DataType: (ptr word32)
  OrigDataType: ptr32
T_33: (in 0x00000000 : word32)
  Class: Eq_33
  DataType: word32
  OrigDataType: word32
T_34: (in esp_14 + 0x00000000 : word32)
  Class: Eq_34
  DataType: ptr32
  OrigDataType: ptr32
T_35: (in Mem51[esp_14 + 0x00000000:word32] : word32)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: word32
T_36: (in 0x00000004 : word32)
  Class: Eq_36
  DataType: ui32
  OrigDataType: ui32
T_37: (in edx_20 - 0x00000004 : word32)
  Class: Eq_22
  DataType: (ptr word32)
  OrigDataType: ptr32
T_38: (in 0x00000000 : word32)
  Class: Eq_38
  DataType: word32
  OrigDataType: word32
T_39: (in edx_20 + 0x00000000 : word32)
  Class: Eq_39
  DataType: ptr32
  OrigDataType: ptr32
T_40: (in Mem16[edx_20 + 0x00000000:word32] : word32)
  Class: Eq_40
  DataType: word32
  OrigDataType: word32
T_41: (in ecx_21 + *edx_20 : word32)
  Class: Eq_25
  DataType: word32
  OrigDataType: word32
T_42: (in 0x00000001 : word32)
  Class: Eq_42
  DataType: word32
  OrigDataType: word32
T_43: (in ebx_18 - 0x00000001 : word32)
  Class: Eq_20
  DataType: word32
  OrigDataType: word32
T_44: (in 0x000003F0 : word32)
  Class: Eq_25
  DataType: word32
  OrigDataType: word32
T_45: (in ecx_21 != 0x000003F0 : bool)
  Class: Eq_45
  DataType: bool
  OrigDataType: bool
T_46: (in 0x0040952F : word32)
  Class: Eq_16
  DataType: word32
  OrigDataType: word32
T_47: (in 0x00000000 : word32)
  Class: Eq_47
  DataType: word32
  OrigDataType: word32
T_48: (in esp_15 + 0x00000000 : word32)
  Class: Eq_48
  DataType: (ptr word32)
  OrigDataType: (ptr word32)
T_49: (in Mem39[esp_15 + 0x00000000:word32] : word32)
  Class: Eq_16
  DataType: word32
  OrigDataType: word32
T_50:
  Class: Eq_50
  DataType: Eq_2
  OrigDataType: (struct 0004 (0 T_35 t0000))
*/
typedef HMODULE Eq_1;

typedef HMODULE Eq_2;

typedef HMODULE (Eq_3)(LPCSTR);

typedef LPCSTR Eq_5;

