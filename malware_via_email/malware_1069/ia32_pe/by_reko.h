// subject.h
// Generated by decompiling subject.exe
// using Reko decompiler version VERSION

/*
// Equivalence classes ////////////
Eq_1: (struct "Globals" (4080D0 word32 dw4080D0))
	globals_t (in globals : (ptr (struct "Globals")))
Eq_2: DWORD
	T_2 (in eax : Eq_2)
	T_14 (in eax_57 : Eq_2)
Eq_24: (struct "Eq_24" (20 word32 dw0020))
	T_24 (in edx_36 : (ptr Eq_24))
	T_28 (in edx_32 - 0x0000001F : word32)
// Type Variables ////////////
globals_t: (in globals : (ptr (struct "Globals")))
  Class: Eq_1
  DataType: (ptr Eq_1)
  OrigDataType: (ptr (struct "Globals"))
T_2: (in eax : Eq_2)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: DWORD
T_3: (in eax : word32)
  Class: Eq_3
  DataType: word32
  OrigDataType: word32
T_4: (in 0x004080D0 : ptr32)
  Class: Eq_4
  DataType: (ptr word32)
  OrigDataType: (ptr (struct (0 T_5 t0000)))
T_5: (in Mem0[0x004080D0:word32] : word32)
  Class: Eq_5
  DataType: word32
  OrigDataType: word32
T_6: (in eax + globals->dw4080D0 : word32)
  Class: Eq_6
  DataType: word32
  OrigDataType: word32
T_7: (in 0x0000000D : word32)
  Class: Eq_6
  DataType: word32
  OrigDataType: word32
T_8: (in eax + globals->dw4080D0 == 0x0000000D : bool)
  Class: Eq_8
  DataType: bool
  OrigDataType: bool
T_9: (in edx_32 : (ptr word32))
  Class: Eq_9
  DataType: (ptr word32)
  OrigDataType: (ptr word32)
T_10: (in dwArg00 : word32)
  Class: Eq_9
  DataType: (ptr word32)
  OrigDataType: word32
T_11: (in esp_54 : word32)
  Class: Eq_11
  DataType: word32
  OrigDataType: word32
T_12: (in ebp_55 : word32)
  Class: Eq_12
  DataType: word32
  OrigDataType: word32
T_13: (in SCZO_56 : byte)
  Class: Eq_13
  DataType: byte
  OrigDataType: byte
T_14: (in eax_57 : Eq_2)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: word32
T_15: (in Z_58 : byte)
  Class: Eq_15
  DataType: byte
  OrigDataType: byte
T_16: (in ebx_59 : word32)
  Class: Eq_16
  DataType: word32
  OrigDataType: word32
T_17: (in edi_60 : word32)
  Class: Eq_17
  DataType: word32
  OrigDataType: word32
T_18: (in SZO_61 : byte)
  Class: Eq_18
  DataType: byte
  OrigDataType: byte
T_19: (in esi_62 : word32)
  Class: Eq_19
  DataType: word32
  OrigDataType: word32
T_20: (in edx_63 : word32)
  Class: Eq_20
  DataType: word32
  OrigDataType: word32
T_21: (in ecx_64 : word32)
  Class: Eq_21
  DataType: word32
  OrigDataType: word32
T_22: (in ax_65 : word16)
  Class: Eq_22
  DataType: word16
  OrigDataType: word16
T_23: (in cx_66 : word16)
  Class: Eq_23
  DataType: word16
  OrigDataType: word16
T_24: (in edx_36 : (ptr Eq_24))
  Class: Eq_24
  DataType: (ptr Eq_24)
  OrigDataType: (ptr (struct (20 T_31 t0020)))
T_25: (in 0x00000020 : word32)
  Class: Eq_25
  DataType: int32
  OrigDataType: int32
T_26: (in edx_36 + 0x00000020 : word32)
  Class: Eq_26
  DataType: (ptr code)
  OrigDataType: (ptr code)
T_27: (in 0x0000001F : word32)
  Class: Eq_27
  DataType: word32
  OrigDataType: word32
T_28: (in edx_32 - 0x0000001F : word32)
  Class: Eq_24
  DataType: (ptr Eq_24)
  OrigDataType: word32
T_29: (in ecx_39 : word32)
  Class: Eq_29
  DataType: word32
  OrigDataType: word32
T_30: (in edx_36 + 0x00000020 : word32)
  Class: Eq_30
  DataType: ptr32
  OrigDataType: ptr32
T_31: (in Mem0[edx_36 + 0x00000020:word32] : word32)
  Class: Eq_29
  DataType: word32
  OrigDataType: word32
T_32: (in edx_36 + 0x00000020 : word32)
  Class: Eq_9
  DataType: (ptr word32)
  OrigDataType: (ptr word32)
T_33: (in cx_40 : word16)
  Class: Eq_33
  DataType: word16
  OrigDataType: word16
T_34: (in (word16) ecx_39 : word16)
  Class: Eq_33
  DataType: word16
  OrigDataType: word16
T_35: (in 0xD6FF : word16)
  Class: Eq_33
  DataType: word16
  OrigDataType: word16
T_36: (in 0xD6FF == cx_40 : bool)
  Class: Eq_36
  DataType: bool
  OrigDataType: bool
*/
typedef struct Globals {
	word32 dw4080D0;	// 4080D0
} Eq_1;

typedef DWORD Eq_2;

typedef struct Eq_24 {
	word32 dw0020;	// 20
} Eq_24;

