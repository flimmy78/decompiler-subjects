// subject.h
// Generated by decompiling subject.exe
// using Reko decompiler version VERSION

/*
// Equivalence classes ////////////
Eq_1: (struct "Globals")
	globals_t (in globals : (ptr (struct "Globals")))
Eq_7: (fn word32 (ptr32, word32, word32, ptr32, word32, ptr32))
	T_7 (in fn00408D01 : ptr32)
	T_8 (in signature of fn00408D01 : void)
Eq_15: (struct "Eq_15" (FFFFFED0 word32 dwFFFFFED0))
	T_15 (in fp : ptr32)
// Type Variables ////////////
globals_t: (in globals : (ptr (struct "Globals")))
  Class: Eq_1
  DataType: (ptr Eq_1)
  OrigDataType: (ptr (struct "Globals"))
T_2: (in eax : ptr32)
  Class: Eq_2
  DataType: ptr32
  OrigDataType: word32
T_3: (in ecx : word32)
  Class: Eq_3
  DataType: word32
  OrigDataType: word32
T_4: (in ebx : word32)
  Class: Eq_4
  DataType: word32
  OrigDataType: word32
T_5: (in edi : word32)
  Class: Eq_5
  DataType: word32
  OrigDataType: word32
T_6: (in edi_14 : word32)
  Class: Eq_6
  DataType: word32
  OrigDataType: word32
T_7: (in fn00408D01 : ptr32)
  Class: Eq_7
  DataType: (ptr Eq_7)
  OrigDataType: (ptr (fn T_21 (T_2, T_3, T_4, T_17, T_19, T_20)))
T_8: (in signature of fn00408D01 : void)
  Class: Eq_7
  DataType: (ptr Eq_7)
  OrigDataType: 
T_9: (in eax : ptr32)
  Class: Eq_2
  DataType: ptr32
  OrigDataType: word32
T_10: (in ecx : word32)
  Class: Eq_3
  DataType: word32
  OrigDataType: word32
T_11: (in ebx : word32)
  Class: Eq_4
  DataType: word32
  OrigDataType: word32
T_12: (in ebp : ptr32)
  Class: Eq_12
  DataType: ptr32
  OrigDataType: word32
T_13: (in edi : word32)
  Class: Eq_13
  DataType: word32
  OrigDataType: word32
T_14: (in ediOut : ptr32)
  Class: Eq_14
  DataType: ptr32
  OrigDataType: ptr32
T_15: (in fp : ptr32)
  Class: Eq_15
  DataType: (ptr Eq_15)
  OrigDataType: (ptr (struct (FFFFFED0 T_25 tFFFFFED0)))
T_16: (in 0x00000004 : word32)
  Class: Eq_16
  DataType: ui32
  OrigDataType: ui32
T_17: (in fp - 0x00000004 : word32)
  Class: Eq_12
  DataType: ptr32
  OrigDataType: ptr32
T_18: (in 0x00000001 : word32)
  Class: Eq_18
  DataType: word32
  OrigDataType: word32
T_19: (in edi + 0x00000001 : word32)
  Class: Eq_13
  DataType: word32
  OrigDataType: word32
T_20: (in out edi_14 : ptr32)
  Class: Eq_14
  DataType: ptr32
  OrigDataType: ptr32
T_21: (in fn00408D01(eax, ecx, ebx, fp - 0x00000004, edi + 0x00000001, out edi_14) : word32)
  Class: Eq_21
  DataType: word32
  OrigDataType: word32
T_22: (in 0x004017B7 : word32)
  Class: Eq_22
  DataType: word32
  OrigDataType: word32
T_23: (in 0xFFFFFED0 : word32)
  Class: Eq_23
  DataType: word32
  OrigDataType: word32
T_24: (in fp + 0xFFFFFED0 : word32)
  Class: Eq_24
  DataType: ptr32
  OrigDataType: ptr32
T_25: (in Mem32[fp + 0xFFFFFED0:word32] : word32)
  Class: Eq_22
  DataType: word32
  OrigDataType: word32
T_26: (in esi : word32)
  Class: Eq_26
  DataType: word32
  OrigDataType: word32
T_27: (in edi_20 : word32)
  Class: Eq_27
  DataType: word32
  OrigDataType: word32
T_28: (in 0x50676865 : word32)
  Class: Eq_28
  DataType: word32
  OrigDataType: word32
T_29: (in ecx - 0x50676865 : word32)
  Class: Eq_29
  DataType: word32
  OrigDataType: word32
T_30: (in *ediOut : word32)
  Class: Eq_29
  DataType: word32
  OrigDataType: word32
T_31: (in fp : ptr32)
  Class: Eq_31
  DataType: ptr32
  OrigDataType: ptr32
T_32: (in 0x000000B0 : word32)
  Class: Eq_32
  DataType: int32
  OrigDataType: int32
T_33: (in fp + 0x000000B0 : word32)
  Class: Eq_2
  DataType: ptr32
  OrigDataType: ptr32
T_34: (in eax == fp + 0x000000B0 : bool)
  Class: Eq_34
  DataType: bool
  OrigDataType: bool
T_35: (in edi_42 : word32)
  Class: Eq_35
  DataType: word32
  OrigDataType: word32
T_36: (in 0x18FD1D6B : word32)
  Class: Eq_36
  DataType: ui32
  OrigDataType: ui32
T_37: (in fp - 0x18FD1D6B : word32)
  Class: Eq_37
  DataType: ptr32
  OrigDataType: ptr32
T_38: (in *ediOut : word32)
  Class: Eq_37
  DataType: ptr32
  OrigDataType: word32
T_39: (in 0x00696B61 : word32)
  Class: Eq_39
  DataType: word32
  OrigDataType: word32
T_40: (in eax + 0x00696B61 : word32)
  Class: Eq_26
  DataType: word32
  OrigDataType: word32
*/
typedef struct Globals {
} Eq_1;

typedef word32 (Eq_7)(ptr32, word32, word32, ptr32, word32, ptr32);

typedef struct Eq_15 {
	word32 dwFFFFFED0;	// FFFFFED0
} Eq_15;

