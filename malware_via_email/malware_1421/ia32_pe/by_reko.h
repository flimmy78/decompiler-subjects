// subject.h
// Generated by decompiling subject.exe
// using Reko decompiler version VERSION

/*
// Equivalence classes ////////////
Eq_1: (struct "Globals")
	globals_t (in globals : (ptr (struct "Globals")))
Eq_2: HWND
	T_2 (in ecx : Eq_2)
	T_5 (in hLB : HWND)
	T_10 (in 0xFFEBB080 : word32)
Eq_3: (fn Eq_6 (Eq_2))
	T_3 (in MakeDragList : ptr32)
	T_4 (in signature of MakeDragList : void)
Eq_6: BOOL
	T_6 (in MakeDragList(ecx) : BOOL)
Eq_12: (fn Eq_14 ())
	T_12 (in GetCommandLineA : ptr32)
	T_13 (in signature of GetCommandLineA : void)
Eq_14: LPSTR
	T_14 (in GetCommandLineA() : LPSTR)
Eq_24: (fn Eq_28 (Eq_26))
	T_24 (in GetModuleHandleA : ptr32)
	T_25 (in signature of GetModuleHandleA : void)
Eq_26: LPCSTR
	T_26 (in lpModuleName : LPCSTR)
	T_27 (in 0x00000000 : word32)
Eq_28: HMODULE
	T_28 (in GetModuleHandleA(null) : HMODULE)
Eq_29: (fn void (Eq_31))
	T_29 (in ExitProcess : ptr32)
	T_30 (in signature of ExitProcess : void)
Eq_31: UINT
	T_31 (in uExitCode : UINT)
	T_32 (in 0x00000000 : word32)
// Type Variables ////////////
globals_t: (in globals : (ptr (struct "Globals")))
  Class: Eq_1
  DataType: (ptr Eq_1)
  OrigDataType: (ptr (struct "Globals"))
T_2: (in ecx : Eq_2)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: HWND
T_3: (in MakeDragList : ptr32)
  Class: Eq_3
  DataType: (ptr Eq_3)
  OrigDataType: (ptr (fn T_6 (T_2)))
T_4: (in signature of MakeDragList : void)
  Class: Eq_3
  DataType: (ptr Eq_3)
  OrigDataType: 
T_5: (in hLB : HWND)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: 
T_6: (in MakeDragList(ecx) : BOOL)
  Class: Eq_6
  DataType: Eq_6
  OrigDataType: BOOL
T_7: (in fp : ptr32)
  Class: Eq_7
  DataType: ptr32
  OrigDataType: ptr32
T_8: (in 0x00000004 : word32)
  Class: Eq_7
  DataType: ptr32
  OrigDataType: word32
T_9: (in fp != 0x00000004 : bool)
  Class: Eq_9
  DataType: bool
  OrigDataType: bool
T_10: (in 0xFFEBB080 : word32)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: word32
T_11: (in ecx != (struct HWND__ *) 0xFFEBB080 : bool)
  Class: Eq_11
  DataType: bool
  OrigDataType: bool
T_12: (in GetCommandLineA : ptr32)
  Class: Eq_12
  DataType: (ptr Eq_12)
  OrigDataType: (ptr (fn T_14 ()))
T_13: (in signature of GetCommandLineA : void)
  Class: Eq_12
  DataType: (ptr Eq_12)
  OrigDataType: 
T_14: (in GetCommandLineA() : LPSTR)
  Class: Eq_14
  DataType: Eq_14
  OrigDataType: LPSTR
T_15: (in ebx_40 : word32)
  Class: Eq_15
  DataType: word32
  OrigDataType: word32
T_16: (in 0x000003F0 : word32)
  Class: Eq_15
  DataType: word32
  OrigDataType: word32
T_17: (in edx_42 : (ptr word32))
  Class: Eq_17
  DataType: (ptr word32)
  OrigDataType: (ptr (struct 0004 (0 word32 dw0000)))
T_18: (in 0x00000E38 : word32)
  Class: Eq_18
  DataType: ui32
  OrigDataType: ui32
T_19: (in fp - 0x00000E38 : word32)
  Class: Eq_17
  DataType: (ptr word32)
  OrigDataType: ptr32
T_20: (in ecx_43 : word32)
  Class: Eq_20
  DataType: word32
  OrigDataType: word32
T_21: (in 0x00000000 : word32)
  Class: Eq_20
  DataType: word32
  OrigDataType: word32
T_22: (in 0x0012FDF8 : word32)
  Class: Eq_7
  DataType: ptr32
  OrigDataType: word32
T_23: (in fp != 0x0012FDF8 : bool)
  Class: Eq_23
  DataType: bool
  OrigDataType: bool
T_24: (in GetModuleHandleA : ptr32)
  Class: Eq_24
  DataType: (ptr Eq_24)
  OrigDataType: (ptr (fn T_28 (T_27)))
T_25: (in signature of GetModuleHandleA : void)
  Class: Eq_24
  DataType: (ptr Eq_24)
  OrigDataType: 
T_26: (in lpModuleName : LPCSTR)
  Class: Eq_26
  DataType: Eq_26
  OrigDataType: 
T_27: (in 0x00000000 : word32)
  Class: Eq_26
  DataType: Eq_26
  OrigDataType: LPCSTR
T_28: (in GetModuleHandleA(null) : HMODULE)
  Class: Eq_28
  DataType: Eq_28
  OrigDataType: HMODULE
T_29: (in ExitProcess : ptr32)
  Class: Eq_29
  DataType: (ptr Eq_29)
  OrigDataType: (ptr (fn T_33 (T_32)))
T_30: (in signature of ExitProcess : void)
  Class: Eq_29
  DataType: (ptr Eq_29)
  OrigDataType: 
T_31: (in uExitCode : UINT)
  Class: Eq_31
  DataType: Eq_31
  OrigDataType: 
T_32: (in 0x00000000 : word32)
  Class: Eq_31
  DataType: Eq_31
  OrigDataType: UINT
T_33: (in ExitProcess(0x00000000) : void)
  Class: Eq_33
  DataType: void
  OrigDataType: void
T_34: (in 0x00000000 : word32)
  Class: Eq_15
  DataType: word32
  OrigDataType: word32
T_35: (in ebx_40 != 0x00000000 : bool)
  Class: Eq_35
  DataType: bool
  OrigDataType: bool
T_36: (in 0x00000004 : word32)
  Class: Eq_36
  DataType: ui32
  OrigDataType: ui32
T_37: (in edx_42 - 0x00000004 : word32)
  Class: Eq_17
  DataType: (ptr word32)
  OrigDataType: ptr32
T_38: (in 0x00000000 : word32)
  Class: Eq_38
  DataType: word32
  OrigDataType: word32
T_39: (in edx_42 + 0x00000000 : word32)
  Class: Eq_39
  DataType: ptr32
  OrigDataType: ptr32
T_40: (in Mem0[edx_42 + 0x00000000:word32] : word32)
  Class: Eq_40
  DataType: word32
  OrigDataType: word32
T_41: (in ecx_43 + *edx_42 : word32)
  Class: Eq_20
  DataType: word32
  OrigDataType: word32
T_42: (in 0x00000001 : word32)
  Class: Eq_42
  DataType: word32
  OrigDataType: word32
T_43: (in ebx_40 - 0x00000001 : word32)
  Class: Eq_15
  DataType: word32
  OrigDataType: word32
T_44: (in 0x000003F0 : word32)
  Class: Eq_20
  DataType: word32
  OrigDataType: word32
T_45: (in ecx_43 != 0x000003F0 : bool)
  Class: Eq_45
  DataType: bool
  OrigDataType: bool
*/
typedef struct Globals {
} Eq_1;

typedef HWND Eq_2;

typedef BOOL (Eq_3)(HWND);

typedef BOOL Eq_6;

typedef LPSTR (Eq_12)();

typedef LPSTR Eq_14;

typedef HMODULE (Eq_24)(LPCSTR);

typedef LPCSTR Eq_26;

typedef HMODULE Eq_28;

typedef void (Eq_29)(UINT);

typedef UINT Eq_31;

